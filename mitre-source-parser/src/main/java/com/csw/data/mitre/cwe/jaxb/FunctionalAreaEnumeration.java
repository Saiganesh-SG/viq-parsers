//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.01.13 at 11:40:26 PM IST 
//


package com.csw.data.mitre.cwe.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FunctionalAreaEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FunctionalAreaEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Authentication"/>
 *     &lt;enumeration value="Authorization"/>
 *     &lt;enumeration value="Code Libraries"/>
 *     &lt;enumeration value="Counters"/>
 *     &lt;enumeration value="Cryptography"/>
 *     &lt;enumeration value="Error Handling"/>
 *     &lt;enumeration value="Interprocess Communication"/>
 *     &lt;enumeration value="File Processing"/>
 *     &lt;enumeration value="Logging"/>
 *     &lt;enumeration value="Memory Management"/>
 *     &lt;enumeration value="Networking"/>
 *     &lt;enumeration value="Number Processing"/>
 *     &lt;enumeration value="Program Invocation"/>
 *     &lt;enumeration value="Protection Mechanism"/>
 *     &lt;enumeration value="Session Management"/>
 *     &lt;enumeration value="Signals"/>
 *     &lt;enumeration value="String Processing"/>
 *     &lt;enumeration value="Functional-Area-Independent"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "FunctionalAreaEnumeration")
@XmlEnum
public enum FunctionalAreaEnumeration {

    @XmlEnumValue("Authentication")
    AUTHENTICATION("Authentication"),
    @XmlEnumValue("Authorization")
    AUTHORIZATION("Authorization"),
    @XmlEnumValue("Code Libraries")
    CODE_LIBRARIES("Code Libraries"),
    @XmlEnumValue("Counters")
    COUNTERS("Counters"),
    @XmlEnumValue("Cryptography")
    CRYPTOGRAPHY("Cryptography"),
    @XmlEnumValue("Error Handling")
    ERROR_HANDLING("Error Handling"),
    @XmlEnumValue("Interprocess Communication")
    INTERPROCESS_COMMUNICATION("Interprocess Communication"),
    @XmlEnumValue("File Processing")
    FILE_PROCESSING("File Processing"),
    @XmlEnumValue("Logging")
    LOGGING("Logging"),
    @XmlEnumValue("Memory Management")
    MEMORY_MANAGEMENT("Memory Management"),
    @XmlEnumValue("Networking")
    NETWORKING("Networking"),
    @XmlEnumValue("Number Processing")
    NUMBER_PROCESSING("Number Processing"),
    @XmlEnumValue("Program Invocation")
    PROGRAM_INVOCATION("Program Invocation"),
    @XmlEnumValue("Protection Mechanism")
    PROTECTION_MECHANISM("Protection Mechanism"),
    @XmlEnumValue("Session Management")
    SESSION_MANAGEMENT("Session Management"),
    @XmlEnumValue("Signals")
    SIGNALS("Signals"),
    @XmlEnumValue("String Processing")
    STRING_PROCESSING("String Processing"),
    @XmlEnumValue("Functional-Area-Independent")
    FUNCTIONAL_AREA_INDEPENDENT("Functional-Area-Independent");
    private final String value;

    FunctionalAreaEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FunctionalAreaEnumeration fromValue(String v) {
        for (FunctionalAreaEnumeration c: FunctionalAreaEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
